# Dockerfile Layer 2 for atlas
# This append to Layer 1 for quick code update
# docker build -t tin6150/atlas102 -f Dockerfile.atlas .  | tee LOG.Dockerfile.atlas
# docker build -t lbnl-science-it/atlas -f Dockerfile.atlas .  | tee Dockerfile.layer2.log 

# branch specific settings:
# base: Dockerfile -> Dockerfile.base
# main: Dockerfile -> Dockerfile.atlas # ie layer 2 that build on top of Dockerfile.base 

FROM ghcr.io/lbnl-science-it/atlas-release:main 

MAINTAINER Tin (at) LBL.gov

ARG DEBIAN_FRONTEND=noninteractive
ARG TERM=dumb
ARG TZ=PST8PDT 
#https://no-color.org/
ARG NO_COLOR=1

## branch l2 (ie layer2, for code dev)
## depends on base branch, rebuild with r-base

RUN echo  ''  ;\
    touch _TOP_DIR_OF_CONTAINER_  ;\
    echo "Layer 2 atlas code addition" | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    export TERM=dumb      ;\
    export NO_COLOR=TRUE  ;\
    cd /    ;\
    echo ""  

RUN echo ''  ;\
    echo '==================================================================' ;\
    echo 'capturing container build info                                    ' ;\
    test -d /opt/gitrepo  || mkdir -p /opt/gitrepo        ;\
    test -d /opt/gitrepo/container_layer2  || mkdir -p /opt/gitrepo/container_layer2          ;\
    git branch | tee /opt/gitrepo/container_layer2/git.branch.out.txt                          ;\
    git log --oneline --graph --decorate | tee /opt/gitrepo/container_layer2/git.lol.out.txt  ;\
    # cd /opt/gitrepo/container_layer2           ;\
    cd /     ;\
    echo ""  



RUN echo ''  ;\
    echo '==================================================================' ;\
    echo '' ;\
    export TERM=dumb  ;\
    ## Rscript --quiet --no-readline --slave -e '{ library(pacman); p_load( optparse, argparse, stats ) }' ;\
    Rscript --quiet --no-readline --slave -e 'library()'   | sort | tee R_library_list.out.l2.txt  ;\
    ls /usr/local/lib/R/site-library | sort | tee R-site-lib-ls.out.l2.txt   ;\
    echo "Done installing packages cran packages - layer 2" | tee -a _TOP_DIR_OF_CONTAINER_     ;\
    date | tee -a      _TOP_DIR_OF_CONTAINER_   ;\
    cd /     ;\
    #// tmp for test with Ling's tmp code
    #// mkdir -p /global/data/transportation/ATLAS/static/urbansim ;\
    #// mkdir -p /global/data/transportation/ATLAS/static/urbansim/model_application ;\
    # I/O dir for sfb-v2 , with DIR_INFO.txt added if repo is copied to /
    mkdir -p /atlast_input   ;\
    mkdir -p /atlast_output  ;\
    pwd  ;\
    echo ""

COPY Dockerfile* /opt/gitrepo/container_layer2/
COPY . /
COPY . /opt/gitrepo/atlas/

ENV DBG_ATLAS_CODE_VER "Atlas sfb-v2.0.12 -- Docker.atlas 2024.0605"
ENV DBG_DOCKERFILE Dockerfile.atlas
ENV TZ America/Los_Angeles 

RUN  cd / \
  && touch _TOP_DIR_OF_CONTAINER_  \
  && echo  "--------" >> _TOP_DIR_OF_CONTAINER_   \
  && TZ=PST8PDT date  >> _TOP_DIR_OF_CONTAINER_   \
  && echo  "$DBG_ATLAS_CODE_VER"           | tee -a  _TOP_DIR_OF_CONTAINER_   \
  && echo  "cleaned Dockerfile.atlas"             \
  && echo  "Grand Finale Dockerfile.atlas"




#ENTRYPOINT ["cat", "/_TOP_DIR_OF_CONTAINER_"]
#ENTRYPOINT [ "Rscript", "/opt/gitrepo/atlas/Model_application_hima.R" ]
ENTRYPOINT [ "/usr/bin/Rscript", "/main.R" ]

# vim: shiftwidth=4 tabstop=4 formatoptions-=cro nolist nu syntax=on
